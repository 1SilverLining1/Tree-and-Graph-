
//https://practice.geeksforgeeks.org/problems/bottom-view-of-binary-tree/1/
void bottomView(Node *root)
{
    
    
    queue < pair  < Node * , int > > q ;
    q.push ( { root , 0 } ) ; 
    map < int , vector < int > > mp ; 
    while ( !q.empty() )
    {
        pair < Node * , int > p = q.front() ; 
        q.pop() ; 
        mp [ p.second].push_back ( p.first -> data ) ; 
        if ( p.first -> left )
            q.push ( { p.first -> left , p.second - 1 } ) ; 
            
        if ( p.first -> right  )
            q.push ( { p.first -> right  , p.second + 1 } ) ; 
    }
    
    for ( auto it = mp.begin() ; it != mp.end() ; it ++ )
    {
        cout << it -> second [it -> second.size() - 1 ] << " " ; 
    }
   // Your Code Here
}

