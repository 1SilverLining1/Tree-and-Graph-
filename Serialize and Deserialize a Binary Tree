
//https://practice.geeksforgeeks.org/problems/serialize-and-deserialize-a-binary-tree/1

void util ( Node* root ,  vector < int > &v )
{
    if ( root == NULL )
    {
        v.push_back ( -1 ) ; 
        return ; 
    }  
    v.push_back ( root -> data ) ; 
    util ( root -> left , v ) ; 
    util ( root -> right , v );
}
void serialize(Node *root,vector<int> &A)
{
   
    util ( root , A ) ; 
   
    /*for ( int  i = 0 ; i < A.size() ; i ++ )
        cout << A [ i ] << " " ; 
    cout << "*****" << endl ;*/
     
}
Node *  deutil (  vector < int > A , int &ind ) 
{
    if ( ind > A.size() or A [ ind ] == -1  )
    {   
        ind ++ ; 
        return NULL ; 
    }
   
    Node * temp = new Node ( A [ ind ] ); 
    ind ++ ; 
    temp -> left = deutil ( A , ind   )  ;
    temp -> right = deutil ( A , ind )  ;
    return temp ; 
}

Node * deSerialize(vector<int> &A)
{
    int ind = 0 ; 
    return deutil (  A , ind   ) ;
    
   //Your code here
}
